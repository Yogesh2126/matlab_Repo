function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "untitled"};
	this.sidHashMap["untitled"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "untitled:26"};
	this.sidHashMap["untitled:26"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "untitled:13"};
	this.sidHashMap["untitled:13"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<Root>/Input"] = {sid: "untitled:20"};
	this.sidHashMap["untitled:20"] = {rtwname: "<Root>/Input"};
	this.rtwnameHashMap["<Root>/Subsystem"] = {sid: "untitled:26"};
	this.sidHashMap["untitled:26"] = {rtwname: "<Root>/Subsystem"};
	this.rtwnameHashMap["<Root>/Output"] = {sid: "untitled:21"};
	this.sidHashMap["untitled:21"] = {rtwname: "<Root>/Output"};
	this.rtwnameHashMap["<S1>/In1"] = {sid: "untitled:27"};
	this.sidHashMap["untitled:27"] = {rtwname: "<S1>/In1"};
	this.rtwnameHashMap["<S1>/Add"] = {sid: "untitled:12"};
	this.sidHashMap["untitled:12"] = {rtwname: "<S1>/Add"};
	this.rtwnameHashMap["<S1>/Compare To Constant"] = {sid: "untitled:13"};
	this.sidHashMap["untitled:13"] = {rtwname: "<S1>/Compare To Constant"};
	this.rtwnameHashMap["<S1>/Constant1"] = {sid: "untitled:15"};
	this.sidHashMap["untitled:15"] = {rtwname: "<S1>/Constant1"};
	this.rtwnameHashMap["<S1>/Switch"] = {sid: "untitled:18"};
	this.sidHashMap["untitled:18"] = {rtwname: "<S1>/Switch"};
	this.rtwnameHashMap["<S1>/Unit Delay"] = {sid: "untitled:19"};
	this.sidHashMap["untitled:19"] = {rtwname: "<S1>/Unit Delay"};
	this.rtwnameHashMap["<S1>/Out1"] = {sid: "untitled:28"};
	this.sidHashMap["untitled:28"] = {rtwname: "<S1>/Out1"};
	this.rtwnameHashMap["<S2>/u"] = {sid: "untitled:13:1"};
	this.sidHashMap["untitled:13:1"] = {rtwname: "<S2>/u"};
	this.rtwnameHashMap["<S2>/Compare"] = {sid: "untitled:13:2"};
	this.sidHashMap["untitled:13:2"] = {rtwname: "<S2>/Compare"};
	this.rtwnameHashMap["<S2>/Constant"] = {sid: "untitled:13:3"};
	this.sidHashMap["untitled:13:3"] = {rtwname: "<S2>/Constant"};
	this.rtwnameHashMap["<S2>/y"] = {sid: "untitled:13:4"};
	this.sidHashMap["untitled:13:4"] = {rtwname: "<S2>/y"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
